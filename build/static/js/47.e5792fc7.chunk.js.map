{"version":3,"sources":["components/shared/PaginationBackend.js","components/shared/ModalToDelete.js","components/hoc/withModal.js","components/Admin/Platforms/TableRow.js","components/Admin/Platforms/Table.js","components/Admin/Platforms/CreateForm.js","components/Admin/Platforms/Platforms.js"],"names":["PaginationBackend","props","setPage","page","totalItems","totalPages","pageSize","allDisabled","pager","state","getPager","setState","onChangePage","setInitialPage","currentPage","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","Array","keys","map","i","this","prevProps","console","log","initialPage","loading","length","style","pointerEvents","className","disabled","onClick","index","key","active","Component","defaultProps","items","ModalToDelete","modal","isOpenModal","toggle","onRequestClose","title","name","onDelete","isOpen","color","withModal","WrappedComponent","toggleModal","nextProps","PlatformsTableRow","idx","id","paddingLeft","showModal","hideModal","Button","margin","padding","backgroundColor","borderColor","PlatformsTable","platforms","platformsJSX","platform","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","Row","Col","initialState","PlatformsCreateForm","handleInputChange","target","value","handleSubmit","event","preventDefault","onCreatePlatform","Form","onSubmit","FormGroup","row","Input","type","placeholder","onChange","WithModalPlatformsCreateForm","Links","totalPlatforms","perPage","createPlatform","addPlatform","then","removePlatform","deletePlatform","data","message","filter","getData","getDataForPlatformPage","platformsData","Count","Page","marginBottom","fontSize","marginRight"],"mappings":"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","file":"static/js/47.e5792fc7.chunk.js","sourcesContent":["// Core\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\r\n\r\nconst propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({})),\r\n  initialPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n  totalItems: PropTypes.number,\r\n  totalPages: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  loading: PropTypes.bool\r\n  // onPageChange: PropTypes.func\r\n};\r\n\r\nconst defaultProps = {\r\n  items: [],\r\n  initialPage: 1,\r\n  pageSize: 10,\r\n  totalItems: null,\r\n  totalPages: null,\r\n  onChangePage: () => null\r\n  // onPageChange: () => null\r\n};\r\n\r\nclass PaginationBackend extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { pager: {} };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // set page if items array isn't empty\r\n    // if (this.props.items && this.props.items.length) {\r\n    //   this.setPage(this.props.initialPage);\r\n    // }\r\n    this.setInitialPage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log('update from PaginationBackend');\r\n    // reset page if initialPage has changed\r\n    if (\r\n      this.props.initialPage !== prevProps.initialPage ||\r\n      this.props.totalItems !== prevProps.totalItems\r\n    ) {\r\n      console.log('condition update from PaginationBackend');\r\n      this.setPage(this.props.initialPage);\r\n    }\r\n  }\r\n\r\n  setPage = page => {\r\n    const { totalItems, totalPages, pageSize } = this.props;\r\n    this.allDisabled = false;\r\n    let pager = this.state.pager;\r\n\r\n    if (page < 1 || page > totalPages) {\r\n      return;\r\n    }\r\n\r\n    // get new pager object for specified page\r\n    pager = this.getPager(totalItems, page, pageSize);\r\n\r\n    // update state\r\n    this.setState({ pager });\r\n\r\n\r\n    // call change page function in parent component\r\n    this.props.onChangePage(page);\r\n    // this.props.onPageChange(page);\r\n\r\n  };\r\n\r\n  setInitialPage = () => {\r\n    let page = 1;\r\n    const { totalItems, totalPages, pageSize } = this.props;\r\n    this.allDisabled = false;\r\n    let pager = this.state.pager;\r\n\r\n    if (page < 1 || page > totalPages) {\r\n      return;\r\n    }\r\n\r\n    // get new pager object for specified page\r\n    pager = this.getPager(totalItems, page, pageSize);\r\n\r\n    // update state\r\n    this.setState({ pager });\r\n\r\n  }\r\n\r\n  getPager = (totalItems, currentPage, pageSize) => {\r\n    // default to first page\r\n    currentPage = currentPage || 1;\r\n\r\n    // default page size is 10\r\n    pageSize = pageSize || 10;\r\n\r\n    // calculate total pages\r\n    const totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    let startPage, endPage;\r\n    if (totalPages <= 10) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 6) {\r\n        startPage = 1;\r\n        endPage = 10;\r\n      } else if (currentPage + 4 >= totalPages) {\r\n        startPage = totalPages - 9;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 5;\r\n        endPage = currentPage + 4;\r\n      }\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\r\n      i => startPage + i\r\n    );\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages\r\n    };\r\n  };\r\n\r\n  render() {\r\n    let pager = this.state.pager;\r\n\r\n    const {loading} = this.props;\r\n\r\n    const loadingStyle = {\r\n      pointerEvents: \"none\",\r\n      // opacity: 0.4\r\n    }\r\n\r\n    const paginationStyle = {};\r\n\r\n    if (!pager.pages || pager.pages.length <= 1) {\r\n      // don't display pager if there is only 1 page\r\n      return null;\r\n    }\r\n    // console.log(this);\r\n    return (\r\n      <Pagination style={loading ? loadingStyle : paginationStyle}  className=\"pagination justify-content-end\">\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={pager.currentPage === 1 ? true : false}\r\n        >\r\n          <PaginationLink className=\"page-link\" onClick={() => this.setPage(1)}>\r\n            First\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={pager.currentPage === 1 ? true : false}\r\n        >\r\n          <PaginationLink\r\n            className=\"page-link\"\r\n            onClick={() => this.setPage(pager.currentPage - 1)}\r\n          >\r\n            Previous\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        {pager.pages.map((page, index) => (\r\n          <PaginationItem\r\n            key={index}\r\n            className=\"page-item\"\r\n            active={pager.currentPage === page ? true : false}\r\n            disabled={this.allDisabled}\r\n          >\r\n            <PaginationLink\r\n              className=\"page-link\"\r\n              onClick={() => this.setPage(page)}\r\n            >\r\n              {page}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        ))}\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={(pager.currentPage === pager.totalPages ? true : false) || this.allDisabled}\r\n        >\r\n          <PaginationLink\r\n            className=\"page-link\"\r\n            onClick={() => this.setPage(pager.currentPage + 1)}\r\n          >\r\n            Next\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={(pager.currentPage === pager.totalPages ? true : false) || this.allDisabled}\r\n        >\r\n          <PaginationLink\r\n            className=\"page-link\"\r\n            onClick={() => this.setPage(pager.totalPages)}\r\n          >\r\n            Last\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n      </Pagination>\r\n    );\r\n  }\r\n}\r\n\r\nPaginationBackend.propTypes = propTypes;\r\nPaginationBackend.defaultProps = defaultProps;\r\n\r\nexport default PaginationBackend;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\nexport default class ModalToDelete extends Component {\r\n  state = {\r\n    modal: this.props.isOpenModal\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(state => ({\r\n      modal: !state.modal\r\n    }));\r\n\r\n    const { onRequestClose } = this.props;\r\n    onRequestClose();\r\n  };\r\n\r\n  render() {\r\n    const { modal } = this.state;\r\n    const { title, name, className, onDelete } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={this.toggle}\r\n        className={`modal-danger \" + ${className ? className : \"\"}`}\r\n      >\r\n        <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\r\n        <ModalBody>{`Are you sure to delete ${name}?`}</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={onDelete}>\r\n            Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\n\r\nconst withModal = WrappedComponent =>\r\n  class withModal extends Component {\r\n    state = {\r\n      modal: false\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n      console.log(\"ПРОПСЫ\", nextProps);\r\n      if (nextProps) {\r\n        return {\r\n          modal: nextProps.isOpenModal\r\n        };\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    toggleModal = () => {\r\n      this.setState(state => ({\r\n        modal: !state.modal\r\n      }));\r\n\r\n      const { onRequestClose } = this.props;\r\n      onRequestClose();\r\n    };\r\n\r\n    render() {\r\n      const { modal } = this.state;\r\n      const { title, className } = this.props;\r\n\r\n      // const renderModalTitle = () => {\r\n      //   switch (title) {\r\n      //     case \"new contact\":\r\n      //       return \"New Contact\";\r\n      //     case \"edit contact\":\r\n      //       return \"Edit Contact\";\r\n      //     case \"appoint interview\":\r\n      //       return \"Appoint Interview\";\r\n      //     case \"add vacancy\":\r\n      //       return \"Add vacancy\";\r\n      //     case \"new user\":\r\n      //       return \"New user\";\r\n      //     case \"create new link\":\r\n      //       return \"Create new link\";\r\n      //     default:\r\n      //       return \"Modal\";\r\n      //   }\r\n      // };\r\n\r\n      return (\r\n        <Modal\r\n          isOpen={modal}\r\n          toggle={this.toggleModal}\r\n          className={`modal-primary \" + ${className ? className : \"\"}`}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>{title}</ModalHeader>\r\n          <ModalBody>{modal && <WrappedComponent {...this.props} />}</ModalBody>\r\n        </Modal>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default withModal;\r\n","// Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\n// Components\r\nimport ModalToDelete from \"../../shared/ModalToDelete\";\r\n// Context\r\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\r\n\r\nconst PlatformsTableRow = ({ idx, id, name, onDelete }) => (\r\n  <>\r\n    <td>{idx + 1}</td>\r\n    <td>{name}</td>\r\n    <td style={{ paddingLeft: \"1.5rem\" }}>\r\n      <ModalConsumer>\r\n        {({ showModal, hideModal }) => (\r\n          <Button\r\n            title=\"delete\"\r\n            style={{\r\n              margin: 0,\r\n              padding: \"0.2rem\",\r\n              backgroundColor: \"transparent\",\r\n              borderColor: \"transparent\"\r\n            }}\r\n            onClick={() =>\r\n              showModal(ModalToDelete, {\r\n                isOpenModal: true,\r\n                title: \"Delete platform\",\r\n                name: `${name}`,\r\n                onDelete: () => {\r\n                  onDelete(id);\r\n                  hideModal();\r\n                }\r\n              })\r\n            }\r\n          >\r\n            <i className=\"cui-trash icons font-lg\" />\r\n          </Button>\r\n        )}\r\n      </ModalConsumer>\r\n    </td>\r\n  </>\r\n);\r\n\r\nPlatformsTableRow.propTypes = {\r\n  idx: PropTypes.number.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nPlatformsTableRow.defaultProps = {\r\n  name: \"\",\r\n  onDelete: () => null\r\n};\r\n\r\nexport default PlatformsTableRow;\r\n","// Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row, Table } from \"reactstrap\";\r\n// Components\r\nimport PlatformsTableRow from \"./TableRow\";\r\nimport PaginationBackend from \"../../shared/PaginationBackend\";\r\n\r\nconst PlatformsTable = ({\r\n  platforms,\r\n  totalItems,\r\n  pageSize,\r\n  totalPages,\r\n  currentPage,\r\n  onChangePage,\r\n  onDelete\r\n}) => {\r\n  const platformsJSX =\r\n    platforms.length > 0 ? (\r\n      platforms.map((platform, idx) => (\r\n        <tr key={platform.id}>\r\n          <PlatformsTableRow idx={idx} {...platform} onDelete={onDelete} />\r\n        </tr>\r\n      ))\r\n    ) : (\r\n      <tr style={{ color: \"var(--secondary)\" }}>\r\n        <td colSpan={9} align=\"center\">\r\n          Nothing found{\" \"}\r\n          <span role=\"img\" aria-label=\"confused face\">\r\n            😕\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Table style={{ background: \"var(--white)\" }} responsive hover>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Platform</th>\r\n            <th scope=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{platformsJSX}</tbody>\r\n      </Table>\r\n      {platforms.length > 0 ? (\r\n        <Row>\r\n          <Col>\r\n            <PaginationBackend\r\n              items={platforms}\r\n              totalItems={totalItems}\r\n              pageSize={pageSize}\r\n              totalPages={totalPages}\r\n              initialPage={currentPage}\r\n              onChangePage={onChangePage}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nPlatformsTable.propTypes = {\r\n  platforms: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequered,\r\n      name: PropTypes.string\r\n    })\r\n  ),\r\n  currentPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n  totalItems: PropTypes.number,\r\n  totalPages: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nPlatformsTable.defaultProps = {\r\n  platforms: [],\r\n  currentPage: null,\r\n  pageSize: null,\r\n  totalItems: null,\r\n  totalPages: null,\r\n  onChangePage: () => null,\r\n  onDelete: () => null\r\n};\r\n\r\nexport default PlatformsTable;\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, FormGroup, Input, Form } from \"reactstrap\";\r\n\r\nconst initialState = {\r\n  name: \"\"\r\n};\r\n\r\nexport default class PlatformsCreateForm extends Component {\r\n  static propTypes = {\r\n    onCreatePlatform: PropTypes.func.isRequired,\r\n    onRequestClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    ...initialState\r\n  };\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { onCreatePlatform, onRequestClose } = this.props;\r\n\r\n    onCreatePlatform(this.state);\r\n\r\n    this.setState({ ...initialState });\r\n    onRequestClose();\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Platform name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={this.handleSubmit}>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\n// Components\r\nimport PlatformsTable from \"./Table\";\r\nimport PlatformsCreateForm from \"./CreateForm\";\r\n// HOC\r\nimport withModal from \"../../hoc/withModal\";\r\n// Context\r\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\r\n// Instruments\r\nimport {\r\n  getDataForPlatformPage,\r\n  addPlatform,\r\n  deletePlatform\r\n} from \"../../../utils/api\";\r\n\r\nconst WithModalPlatformsCreateForm = withModal(PlatformsCreateForm);\r\n\r\nexport default class Links extends Component {\r\n  state = {\r\n    platforms: [],\r\n    totalPlatforms: null,\r\n    totalPages: null,\r\n    perPage: null,\r\n    currentPage: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { currentPage } = this.state;\r\n\r\n    this.getData(currentPage);\r\n  }\r\n\r\n  createPlatform = platform => {\r\n    addPlatform(platform).then(platform => {\r\n      platform\r\n        ? this.setState({\r\n            platforms: [platform, ...this.state.platforms]\r\n          })\r\n        : console.log(\"Error while adding platform\");\r\n    });\r\n  };\r\n\r\n  removePlatform = id => {\r\n    deletePlatform(id).then(data => {\r\n      data.message === \"Delete Successfully\"\r\n        ? this.setState(state => ({\r\n            platforms: state.platforms.filter(platform => platform.id !== id)\r\n          }))\r\n        : console.log(\"Error while deleting platform\");\r\n    });\r\n  };\r\n\r\n  onChangePage = currentPage => {\r\n    this.getData(currentPage);\r\n  };\r\n\r\n  getData = currentPage => {\r\n    getDataForPlatformPage(currentPage).then(data => {\r\n      const platformsData = {\r\n        platforms: data.platforms,\r\n        totalPlatforms: data.Count,\r\n        totalPages: data.Page,\r\n        perPage: data.perPage,\r\n        currentPage: data.currentPage\r\n      };\r\n      this.setState({\r\n        ...this.state,\r\n        ...platformsData\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      platforms,\r\n      totalPlatforms,\r\n      perPage,\r\n      totalPages,\r\n      currentPage\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: \"1rem\" }}>\r\n          <Col>\r\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Platforms</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: \"1rem\" }}>\r\n          <Col>\r\n            <ModalConsumer>\r\n              {({ showModal }) => (\r\n                <Button\r\n                  color=\"success\"\r\n                  onClick={() =>\r\n                    showModal(WithModalPlatformsCreateForm, {\r\n                      isOpenModal: true,\r\n                      title: \"Create new platform\",\r\n                      onCreatePlatform: this.createPlatform\r\n                    })\r\n                  }\r\n                >\r\n                  <i\r\n                    style={{ marginRight: \"0.2rem\" }}\r\n                    className=\"fa fa-plus-circle\"\r\n                  />\r\n                  Create\r\n                </Button>\r\n              )}\r\n            </ModalConsumer>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PlatformsTable\r\n              platforms={platforms}\r\n              totalItems={totalPlatforms}\r\n              pageSize={perPage}\r\n              totalPages={totalPages}\r\n              currentPage={currentPage}\r\n              onChangePage={this.onChangePage}\r\n              onDelete={this.removePlatform}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}