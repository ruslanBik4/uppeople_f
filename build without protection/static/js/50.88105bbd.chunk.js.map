{"version":3,"sources":["../node_modules/reactstrap/es/Table.js","utils/api/users.js","components/Admin/Vacancy dashboard/TableRow.js","components/Admin/Vacancy dashboard/Dashboard.js"],"names":["propTypes","className","PropTypes","string","cssModule","object","size","bordered","bool","borderless","striped","dark","hover","responsive","oneOfType","tag","tagPropType","responsiveTag","innerRef","func","Table","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps","getUsers","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","json","Error","statusText","data","staff","users","partners","freelancers","freeLancers","catch","error","console","log","TableRow","companyId","recruiterId","vacancyId","vacancy","quantity","recruiterName","conpanyName","recruiters","companies","find","company","name","id","recruiter","Link","to","target","Dashboard","state","selectedRecruiter","selectedCompany","dashboardData","fetchCompanies","a","getCompanies","companies_result","setState","fetchCandidatesData","getCandidatesAmountByVacancies","sort","b","company_name","fetchRecruiters","filter","user","role_id","loading","handleRecruiterSelect","handleCompanySelect","this","prevProps","prevState","vacansiesAndCompaniesJSX","map","vacancy_id","key","platform_name","user_name","Row","Col","style","display","justifyContent","maxWidth","marginBottom","marginTop","fontSize","alignSelf","color","xs","sm","md","lg","xl","FormGroup","value","options","isClearable","getOptionValue","getOptionLabel","placeholder","onChange","background","Component"],"mappings":"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","file":"static/js/50.88105bbd.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","const URL = \"http://f2.uppeople.space/api\";\r\nconst getToken = () => localStorage.getItem(\"token\");\r\n\r\n/**\r\n * Fetches all users from an api\r\n *\r\n * @returns {Promise} Promise object represents operation result\r\n */\r\nexport const getUsers = () => {\r\n  const token = getToken();\r\n\r\n  return fetch(`${URL}/admin/all-staff`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(`Error while fetching: ${response.statusText}`);\r\n    })\r\n    .then(data => {\r\n      const users = {\r\n        staff: data.users,\r\n        partners: data.partners,\r\n        freelancers: data.freeLancers\r\n      };\r\n\r\n      return users;\r\n    })\r\n    .catch(error => console.log(\"error in fetch: \", error));\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TableRow = ({\r\n  vacancyId,\r\n  vacancy,\r\n  quantity,\r\n  recruiterName,\r\n  conpanyName,\r\n  recruiters,\r\n  companies,\r\n}) => {\r\n  let companyId;\r\n  companies.find((company) => {\r\n    if (company.name === conpanyName) companyId = company.id;\r\n  });\r\n\r\n  let recruiterId;\r\n  recruiters.find((recruiter) => {\r\n    if (recruiter.name === recruiterName) recruiterId = recruiter.id;\r\n  });\r\n\r\n  return (\r\n    <tr>\r\n      <td className='text-center'>\r\n        <Link to={`/vacancies/${vacancyId}`} target='_blank'>\r\n          {\" \"}\r\n          {vacancy}\r\n        </Link>\r\n      </td>\r\n      <td className='text-center'>\r\n        <Link to={`/companies/${companyId}`} target='_blank'>\r\n          {\" \"}\r\n          {conpanyName}\r\n        </Link>\r\n      </td>\r\n      <td className='text-center'>\r\n        <Link to={`/users/${recruiterId}`} target='_blank'>\r\n          {recruiterName}\r\n        </Link>\r\n      </td>\r\n      <td className='text-center'>\r\n        <div>{quantity}</div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nexport default TableRow;\r\n","// Core;\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { Col, Row, Table, FormGroup } from \"reactstrap\";\n// Components\nimport TableRow from \"./TableRow\";\nimport { getUsers } from \"../../../utils/api/users\";\nimport { getCompanies } from \"../../../utils/api/company\";\nimport { getCandidatesAmountByVacancies } from \"../../../utils/api/candidates\";\n\nexport default class Dashboard extends Component {\n  state = {\n    recruiters: [],\n    companies: [],\n\n    selectedRecruiter: null,\n    selectedCompany: null,\n\n    dashboardData: null,\n  };\n\n  componentDidMount() {\n    this.fetchCompanies();\n    this.fetchRecruiters();\n    this.fetchCandidatesData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.selectedRecruiter !== prevState.selectedRecruiter ||\n      this.state.selectedCompany !== prevState.selectedCompany\n    ) {\n      this.fetchCandidatesData();\n    }\n  }\n\n  fetchCompanies = async () => {\n    let companies_result = await getCompanies(0, 1);\n    const companies = companies_result.companies;\n    this.setState({ companies });\n  };\n\n  fetchCandidatesData = async () => {\n    const { selectedCompany, selectedRecruiter } = this.state;\n\n    const dashboardData = await getCandidatesAmountByVacancies(\n      selectedRecruiter ? selectedRecruiter.id : null,\n      selectedCompany ? selectedCompany.id : null\n    );\n\n    dashboardData.data.sort((a, b) =>\n      a.company_name > b.company_name ? 1 : -1\n    );\n\n    this.setState({ dashboardData });\n  };\n\n  fetchRecruiters = async () => {\n    const users = await getUsers();\n\n    const recruiters = users.staff.filter((user) => user.role_id === 2);\n    this.setState({ recruiters });\n  };\n\n  loading = () => (\n    <div className='animated fadeIn pt-1 text-center'>Loading...</div>\n  );\n\n  handleRecruiterSelect = (selectedRecruiter) => {\n    this.setState({ selectedRecruiter });\n  };\n\n  handleCompanySelect = (selectedCompany) => {\n    this.setState({ selectedCompany });\n  };\n\n  render() {\n    const {\n      dashboardData,\n      recruiters,\n      companies,\n      selectedRecruiter,\n      selectedCompany,\n    } = this.state;\n\n    const vacansiesAndCompaniesJSX =\n      dashboardData &&\n      dashboardData.data.map((data) => {\n        return (\n          <TableRow\n            vacancyId={data.vacancy_id}\n            key={data.vacancy_id}\n            vacancy={data.platform_name}\n            conpanyName={data.company_name}\n            recruiterName={data.user_name}\n            quantity={data.quantity}\n            recruiters={recruiters}\n            companies={companies}\n          />\n        );\n      });\n\n    return (\n      <div className='animated fadeIn'>\n        <Row>\n          <Col\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              maxWidth: 180,\n              marginBottom: \"0.5rem\",\n            }}\n          >\n            <h1 style={{ marginBottom: 0, marginTop: 20, fontSize: 24 }}>\n              Dashboard\n            </h1>\n            <span\n              style={{\n                alignSelf: \"flex-end\",\n                color: \"var(--gray)\",\n              }}\n            ></span>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs='12' sm='12' md='12' lg='3' xl='3'>\n            <FormGroup className='filter-select'>\n              <Select\n                style={{ marginBottom: 15 }}\n                value={selectedRecruiter}\n                options={recruiters}\n                isClearable\n                getOptionValue={(user) => user.id}\n                getOptionLabel={(user) => user.name}\n                placeholder='Recruiters'\n                onChange={this.handleRecruiterSelect}\n              />\n            </FormGroup>\n          </Col>\n          <Col xs='12' sm='12' md='12' lg='3' xl='3'>\n            <FormGroup className='filter-select'>\n              <Select\n                style={{ marginBottom: \"1rem\" }}\n                value={selectedCompany}\n                options={companies}\n                isClearable\n                getOptionValue={(company) => company.id}\n                getOptionLabel={(company) => company.name}\n                placeholder='Companies'\n                onChange={this.handleCompanySelect}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs='12' md='12' xl='12'>\n            <Table style={{ background: \"var(--white)\" }} responsive hover>\n              <thead>\n                <tr>\n                  <th className='text-center'>Vacancies</th>\n                  <th className='text-center'>Company</th>\n                  <th className='text-center'>Recruiter</th>\n                  <th className='text-center'>Quantity</th>\n                </tr>\n              </thead>\n              <tbody>{vacansiesAndCompaniesJSX}</tbody>\n            </Table>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}