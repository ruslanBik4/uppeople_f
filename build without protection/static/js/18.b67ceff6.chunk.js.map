{"version":3,"sources":["components/shared/Calendar.js","components/pages/CalendarPage/CalendarPage.js"],"names":["localizer","BigCalendar","momentLocalizer","moment","currDate","Date","currYear","getFullYear","currMonth","getMonth","Calendar","state","events","handleSelect","start","end","title","window","prompt","setState","this","className","style","height","selectable","popup","views","step","defaultDate","defaultView","toolbar","onSelectEvent","event","alert","format","onSelectSlot","startAccessor","endAccessor","nextProps","undefined","length","map","toDate","addHour","add","Component","CalendarPage","getEventsForCalendar","then"],"mappings":"gUAOMA,G,OAAYC,IAAYC,gBAAgBC,MAExCC,EAAW,IAAIC,KACfC,EAAWF,EAASG,cACpBC,EAAYJ,EAASK,WAENC,E,4MACnBC,MAAQ,CACNC,OAAQ,I,EA6BVC,aAAe,YAAqB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjBC,EAAQC,OAAOC,OAAO,kBACxBF,GACF,EAAKG,SAAS,CACZP,OAAO,GAAD,mBACD,EAAKD,MAAMC,QADV,CAEJ,CACEE,QACAC,MACAC,c,uDAMA,IACAJ,EAAWQ,KAAKT,MAAhBC,OAER,OACE,yBAAKS,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,UAAU,kBADf,YAIA,kBAAC,IAAD,CAAUC,MAAO,CAAEC,OAAQ,SACzB,kBAAC,IAAD,CACEC,YAAU,EACVC,OAAK,EACLzB,UAAWA,EAEXY,OAAQA,EACRc,MAAO,CAAC,QAAS,OAAQ,OACzBC,KAAM,GACNC,YAAa,IAAIvB,KAAKC,EAAUE,EAAW,GAC3CqB,YAAY,QACZC,SAAS,EACTC,cAAe,SAAAC,GAAK,OAClBC,MAAM,cAAD,OAAeD,EAAMhB,MAArB,mBAAqCb,IAAO6B,EAAMlB,OAAOoB,OAAO,WAEvEC,aAAcf,KAAKP,aACnBuB,cAAc,QACdC,YAAY,c,gDApEQC,GAE9B,YAAyBC,IAArBD,EAAU1B,QAAwB0B,EAAU1B,OAAO4B,OAAS,EAcvD,CACL5B,OAdqB0B,EAAU1B,OAAO6B,KAAI,SAAAT,GAC1C,IAAMhB,EAAQgB,EAAMhB,MACdF,EAAQX,IAAO6B,EAAMlB,OAAO4B,SAC5BC,EAAUxC,IAAO6B,EAAMlB,OAAO8B,IAAI,EAAG,QAG3C,MAAO,CACL5B,QACAF,QACAC,IALUZ,IAAOwC,GAASD,cAczB,CACL9B,OAAQ,Q,GA3BwBiC,c,sJCTjBC,E,4MACnBnC,MAAQ,CACNC,OAAQ,I,kEAGW,IAAD,OAClBmC,cAAuBC,MAAK,SAAApC,GAAM,OAChC,EAAKO,SAAS,CACZP,gB,+BAKI,IACAA,EAAWQ,KAAKT,MAAhBC,OAER,OAAO,kBAAC,IAAD,CAAUA,OAAQA,Q,GAhBaiC","file":"static/js/18.b67ceff6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\r\nimport BigCalendar from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\n// import { getEventsForCalendar } from \"../../utils/api\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment);\r\n\r\nconst currDate = new Date();\r\nconst currYear = currDate.getFullYear();\r\nconst currMonth = currDate.getMonth();\r\n\r\nexport default class Calendar extends Component {\r\n  state = {\r\n    events: []\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps) {\r\n    // console.log(nextProps);\r\n    if (nextProps.events !== undefined && nextProps.events.length > 0) {\r\n      const modifiedEvents = nextProps.events.map(event => {\r\n        const title = event.title;\r\n        const start = moment(event.start).toDate();\r\n        const addHour = moment(event.start).add(1, \"hour\");\r\n        const end = moment(addHour).toDate();\r\n\r\n        return {\r\n          title,\r\n          start,\r\n          end\r\n        };\r\n      });\r\n\r\n      return {\r\n        events: modifiedEvents\r\n      };\r\n    }\r\n\r\n    return {\r\n      events: []\r\n    };\r\n  }\r\n\r\n  handleSelect = ({ start, end }) => {\r\n    const title = window.prompt(\"New Event name\");\r\n    if (title)\r\n      this.setState({\r\n        events: [\r\n          ...this.state.events,\r\n          {\r\n            start,\r\n            end,\r\n            title\r\n          }\r\n        ]\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { events } = this.state;\r\n\r\n    return (\r\n      <div className=\"animated\">\r\n        <Card>\r\n          <CardHeader>\r\n            <i className=\"icon-calendar\" />\r\n            Calendar\r\n          </CardHeader>\r\n          <CardBody style={{ height: \"40em\" }}>\r\n            <BigCalendar\r\n              selectable\r\n              popup\r\n              localizer={localizer}\r\n              // className=\"d-sm-down-none\"\r\n              events={events}\r\n              views={[\"month\", \"week\", \"day\"]}\r\n              step={30}\r\n              defaultDate={new Date(currYear, currMonth, 1)}\r\n              defaultView=\"month\"\r\n              toolbar={true}\r\n              onSelectEvent={event =>\r\n                alert(`Candidate: ${event.title}, Date: ${moment(event.start).format(\"LLLL\")}`)\r\n              }\r\n              onSelectSlot={this.handleSelect}\r\n              startAccessor=\"start\"\r\n              endAccessor=\"end\"\r\n              // {...this.props}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Calendar from \"../../shared/Calendar\";\r\nimport { getEventsForCalendar } from \"../../../utils/api\";\r\n\r\nexport default class CalendarPage extends Component {\r\n  state = {\r\n    events: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    getEventsForCalendar().then(events =>\r\n      this.setState({\r\n        events\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { events } = this.state;\r\n    // console.log(events);\r\n    return <Calendar events={events} />;\r\n  }\r\n}\r\n"],"sourceRoot":""}