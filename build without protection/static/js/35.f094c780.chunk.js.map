{"version":3,"sources":["components/Admin/Analytics/Analytics.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["Analytics","props","fetchRecruiters","a","getUsers","undefined","users","staff","recruiters","filter","user","role_id","setState","selectedRecruiter","recruitersIsClearable","fetchCompanies","getCompanies","companies_result","state","companies","company","vacancies","indexOf","id","fetchVacancies","selectedCompany","getVacancies","vacancies_result","vacancy","fetchTags","getTags","tags","fetchCandidatesData","selectedVacancy","selectedTag","selectedStartDate","selectedEndDate","getCandidatesAmountByStatuses","funnelData","data","fetchStatuses","getStatuses","statuses","selectedStatuses","handleRecruiterSelect","handleCompanySelect","handleVacancySelect","company_id","handleTagsSelect","handleStatusChange","handleDate","target","name","value","renderChart","result","Object","entries","reduceRight","acc","index","array","currentKey","currentValue","prev","prevKey","count","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","length","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","reverse","status","selectedStatus","label","push","stat","color","percentage","reduce","acc_","parseFloat","toFixed","final_data","dynamicSlope","dynamicHeight","style","margin","width","height","text","type","categoryField","field","colorField","background","format","render","point","category","visible","date","Date","y","getFullYear","m","getMonth","firstDay","toJSON","slice","lastDay","this","prevProps","prevState","Row","marginBottom","Col","fontSize","xs","sm","md","lg","xl","FormGroup","className","options","isClearable","getOptionValue","getOptionLabel","placeholder","onChange","isMulti","Input","Component"],"mappings":"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","file":"static/js/35.f094c780.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Col, FormGroup, Input, Row} from \"reactstrap\";\nimport Select from \"react-select\";\nimport {getUsers} from \"../../../utils/api/users\"; // вакансии\nimport {getCompanies} from \"../../../utils/api/company\"; // компании\nimport {getVacancies, getTags} from \"../../../utils/api/vacancy\"; // вакансии и теги\nimport {getStatuses, getCandidatesAmountByStatuses} from \"../../../utils/api/candidates\"; // вакансии и теги\nimport {\n  Chart,\n  ChartTitle,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartTooltip,\n  ChartSeriesLabels,\n} from \"@progress/kendo-react-charts\";\n// Import the styles\nimport {styles} from \"../../../assets/css/analitycs.css\";\n\nexport default class Analytics extends Component {\n  constructor(props) {\n    super(props);\n\n    let date = new Date(), y = date.getFullYear(), m = date.getMonth();\n    let firstDay = new Date(y, m, 2).toJSON().slice(0, 10);\n    let lastDay = new Date(y, m + 1, 0).toJSON().slice(0, 10);\n\n    this.state = {\n      recruiters: [],\n      companies: [],\n      vacancies: [],\n      tags: [],\n      statuses: [],\n\n      selectedRecruiter: null,\n      selectedCompany: null,\n      selectedVacancy: null,\n      selectedTag: null,\n      selectedStatuses: null,\n      selectedStartDate: firstDay,\n      selectedEndDate: lastDay,\n\n      recruitersIsClearable: true,\n\n      funnelData: null,\n      dynamicSlope: true,\n      dynamicHeight: false\n    };\n  }\n\n  componentDidMount() { // тут пишеться те, що потрібно підгрузити з АПІ\n    this.fetchRecruiters();\n    this.fetchCompanies();\n    this.fetchVacancies();\n    this.fetchTags();\n    // this.fetchCandidatesData();\n    this.fetchStatuses();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedRecruiter !== prevState.selectedRecruiter ||\n      this.state.selectedCompany !== prevState.selectedCompany ||\n      this.state.selectedVacancy !== prevState.selectedVacancy ||\n      this.state.selectedTag !== prevState.selectedTag ||\n      this.state.selectedStatuses !== prevState.selectedStatuses ||\n      this.state.selectedStartDate !== prevState.selectedStartDate ||\n      this.state.selectedEndDate !== prevState.selectedEndDate) {\n      this.fetchCandidatesData();\n    }\n\n    if (this.state.selectedRecruiter !== prevState.selectedRecruiter) {\n      this.fetchCompanies();\n      this.fetchVacancies();\n    }\n\n    if (this.state.selectedCompany !== prevState.selectedCompany) {\n      this.fetchVacancies();\n    }\n  }\n\n  fetchRecruiters = async () => {\n    const users = await getUsers();\n\n    if (users.staff !== undefined) {\n      const recruiters = users.staff.filter((user) => user.role_id === 2); // recruiter\n      this.setState({recruiters});\n    } else if (users.recruiters !== undefined) {\n      const recruiters = users.recruiters; // recruiter\n      this.setState({recruiters});\n      this.setState({selectedRecruiter: recruiters[0]});\n      this.setState({recruitersIsClearable: false});\n    }\n  };\n\n  fetchCompanies = async () => {\n    let companies_result = await getCompanies(0, 1, 1);\n    const {selectedRecruiter} = this.state;\n    const companies = companies_result.companies.filter((company) => company.vacancies > 0 &&\n      (selectedRecruiter !== null && company.recruiters.indexOf(selectedRecruiter.id) + 1 > 0 || selectedRecruiter === null));\n    this.setState({companies});\n  };\n\n  fetchVacancies = async () => {\n    const {selectedCompany, selectedRecruiter} = this.state;\n    const vacancies_result = await getVacancies(selectedCompany !== null ? selectedCompany.id : null, true, true);\n    const vacancies = vacancies_result.vacancies.filter((vacancy) =>\n      (selectedRecruiter !== null && vacancy.recruiters.indexOf(selectedRecruiter.id) + 1 > 0 || selectedRecruiter === null)\n    );\n    this.setState({vacancies});\n  };\n\n  fetchTags = async () => {\n    const tags = await getTags();\n    this.setState({tags});\n  };\n\n  fetchCandidatesData = async () => {\n    const {selectedRecruiter, selectedCompany, selectedVacancy, selectedTag, selectedStartDate, selectedEndDate} = this.state;\n    let funnelData = await getCandidatesAmountByStatuses(\n      selectedRecruiter ? selectedRecruiter.id : 0,\n      selectedCompany ? selectedCompany.id : 0,\n      selectedVacancy ? selectedVacancy.id : 0,\n      selectedTag ? selectedTag.id : 0,\n      selectedStartDate, selectedEndDate);\n    if (funnelData !== undefined) {\n      funnelData = funnelData.data;\n      this.setState({funnelData});\n    } else {\n      this.setState({funnelData: null});\n    }\n  };\n\n  fetchStatuses = async () => {\n    const statuses = await getStatuses();\n    this.setState({statuses});\n    this.setState({selectedStatuses: statuses});\n  };\n\n\n  handleRecruiterSelect = (selectedRecruiter) => {\n    this.setState({selectedRecruiter});\n  };\n\n  handleCompanySelect = (selectedCompany) => {\n    this.setState({selectedCompany});\n  };\n\n  handleVacancySelect = (selectedVacancy) => {\n    let {selectedCompany, companies} = this.state;\n    if (selectedVacancy !== null) {\n      selectedCompany = companies.filter((company) => company.id === selectedVacancy.company_id)[0];\n    }\n    this.setState({selectedVacancy, selectedCompany});\n  };\n\n  handleTagsSelect = (selectedTag) => {\n    this.setState({selectedTag});\n  };\n\n  handleStatusChange = (selectedStatuses) => {\n    this.setState({selectedStatuses});\n  };\n\n  handleDate = ({target: {name, value}}) => {\n    this.setState({[name]: value});\n  };\n\n  renderChart = () => {\n    const {funnelData, selectedStatuses} = this.state;\n\n    if (funnelData !== null && funnelData !== undefined) {\n      const result = Object.entries(funnelData).reduceRight(\n        (acc, [currentKey, currentValue], index, array) => {\n          const prev = array[index + 1];\n          if (prev) {\n            const [prevKey] = prev;\n            acc[currentKey] = {\n              ...currentValue,\n              count: acc[prevKey].count + currentValue.count,\n            };\n          } else {\n            acc[currentKey] = currentValue;\n          }\n          return acc;\n        },\n        {}\n      );\n\n      let data = [];\n      for (const [status, value] of Object.entries(result).reverse()) {\n        let in_statuses = selectedStatuses.filter((selectedStatus) => selectedStatus.label === status);\n        if (in_statuses.length > 0) {\n          data.push({\n            stat: status,\n            count: value.count,\n            color: value.color,\n            percentage: 100\n          });\n        }\n      }\n\n      data = data.reduce(\n        (acc_, currentValue, index, array) => {\n          const prev = array[index - 1];\n\n          if (prev) {\n            currentValue.percentage = (parseFloat(currentValue.count) * 100 / parseFloat(prev.count)).toFixed(0)\n          }\n\n          acc_[index] = currentValue;\n\n          return acc_;\n        },\n        {}\n      );\n\n      let final_data = [];\n      for (const [index, value] of Object.entries(data)) {\n        final_data.push({\n          stat: value.stat + ' ' + value.percentage + '%',\n          count: value.count,\n          color: value.color,\n        });\n      }\n\n      const tooltipRender = (({point = {}}) => (point.category));\n\n      const {dynamicSlope, dynamicHeight} = this.state;\n      return (\n\n        <Chart style={{margin: \"0 auto\", width: 300, height: 350}}>\n          <ChartTitle text=\"Recruitment funnel\"/>\n          <ChartSeries style={{height: 350}}>\n            <ChartSeriesItem\n              type=\"funnel\"\n              data={final_data}\n              categoryField=\"stat\"\n              field=\"count\"\n              colorField=\"color\"\n              dynamicHeight={dynamicHeight}\n              dynamicSlope={dynamicSlope}\n            >\n              <ChartSeriesLabels color=\"black\" background=\"none\" format=\"N0\"/>\n            </ChartSeriesItem>\n          </ChartSeries>\n          <ChartTooltip render={tooltipRender}/>\n          <ChartLegend visible={false}/>\n        </Chart>\n      );\n      // }\n      // else {\n      //   return (<p>No data found</p>);\n      // }\n    }\n\n  };\n\n\n  render() {\n    const {recruiters, selectedRecruiter, recruitersIsClearable} = this.state;\n    const {companies, selectedCompany} = this.state;\n    const {vacancies, selectedVacancy} = this.state;\n    const {tags, selectedTag} = this.state;\n    const {statuses, selectedStatuses} = this.state;\n    const {selectedStartDate, selectedEndDate} = this.state;\n    const {clearable} = true;\n\n    return (\n      <>\n        <Row style={{marginBottom: \"1rem\"}}>\n          <Col>\n            <h1 style={{marginBottom: 0, fontSize: 24}}>Recruitment funnel</h1>\n          </Col>\n        </Row>\n        <Row style={{marginBottom: \"1rem\"}}>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\">\n            <FormGroup className=\"filter-select\">\n              <label className=\"date-filter-label\">Filters</label>\n              <Select\n                style={{marginBottom: 15}}\n                value={selectedRecruiter}\n                options={recruiters}\n                isClearable={recruitersIsClearable}\n                getOptionValue={(user) => user.id}\n                getOptionLabel={(user) => user.name}\n                placeholder=\"Recruiters\"\n                onChange={this.handleRecruiterSelect}\n              />\n            </FormGroup>\n            <FormGroup className=\"filter-select\">\n              <Select\n                style={{marginBottom: \"1rem\"}}\n                value={selectedCompany}\n                options={companies}\n                isClearable\n                getOptionValue={(company) => company.id}\n                getOptionLabel={(company) => company.name}\n                placeholder=\"Companies\"\n                onChange={this.handleCompanySelect}\n              />\n            </FormGroup>\n            <FormGroup className=\"filter-select\">\n              <Select\n                style={{marginBottom: \"1rem\"}}\n                value={selectedVacancy}\n                options={vacancies}\n                isClearable\n                getOptionValue={(vacancy) => vacancy.id}\n                getOptionLabel={(vacancy) => vacancy.label}\n                placeholder=\"Vacancies\"\n                onChange={this.handleVacancySelect}\n              />\n            </FormGroup>\n\n            {/*<FormGroup className=\"filter-select\" >*/}\n            {/*  <Select*/}\n            {/*    style={{marginBottom: \"1rem\"}}*/}\n            {/*    value={selectedTag}*/}\n            {/*    options={tags}*/}\n            {/*    getOptionValue={(tag) => tag.id}*/}\n            {/*    getOptionLabel={(tag) => tag.name}*/}\n            {/*    placeholder=\"Tags\"*/}\n            {/*    onChange={this.handleTagsSelect}*/}\n            {/*  />*/}\n            {/*</FormGroup>*/}\n            <FormGroup className=\"filter-select\">\n              <Select\n                isMulti\n                value={selectedStatuses}\n                options={statuses}\n                placeholder=\"Statuses\"\n                onChange={this.handleStatusChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\">\n            <Row style={{marginBottom: \"1rem\"}}>\n              {this.renderChart()}\n            </Row>\n          </Col>\n          <Col lg={2} md={2}>\n            <FormGroup>\n              <label className=\"date-filter-label\">Date From</label>\n              <Input\n                id=\"date-from\"\n                type=\"date\"\n                name=\"selectedStartDate\"\n                value={selectedStartDate}\n                onChange={this.handleDate}\n              />\n            </FormGroup>\n          </Col>\n          <Col lg={2} md={2}>\n            <FormGroup>\n              <label className=\"date-filter-label\">Date To</label>\n              <Input\n                id=\"date-to\"\n                type=\"date\"\n                name=\"selectedEndDate\"\n                value={selectedEndDate}\n                onChange={this.handleDate}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n      </>\n\n    );\n  }\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}