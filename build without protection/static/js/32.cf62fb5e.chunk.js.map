{"version":3,"sources":["components/Admin/Vacancy dashboard/Dashboard.js","utils/api/users.js","../node_modules/reactstrap/es/Table.js","components/Admin/Vacancy dashboard/TableRow.js"],"names":["Dashboard","state","recruiters","companies","selectedRecruiter","selectedCompany","recruitersIsClearable","dashboardData","fetchRecruiters","a","getUsers","undefined","users","staff","filter","user","role_id","setState","fetchCompanies","getCompanies","companies_result","company","vacancies","indexOf","id","fetchCandidatesData","getCandidatesAmountByVacancies","data","sort","b","company_name","loading","className","handleRecruiterSelect","handleCompanySelect","this","prevProps","prevState","vacansiesAndCompaniesJSX","map","vacancyId","vacancy_id","key","vacancy","platform_name","conpanyName","recruiterName","user_name","quantity","style","display","justifyContent","maxWidth","marginBottom","marginTop","fontSize","alignSelf","color","xs","sm","md","lg","xl","value","options","isClearable","getOptionValue","getOptionLabel","name","placeholder","onChange","background","responsive","hover","Component","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","json","Error","statusText","partners","freelancers","freeLancers","catch","error","console","log","propTypes","PropTypes","string","cssModule","object","size","bordered","bool","borderless","striped","dark","oneOfType","tag","tagPropType","responsiveTag","innerRef","func","Table","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps","TableRow","companyId","recruiterId","find","recruiter","to","target"],"mappings":"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","file":"static/js/32.cf62fb5e.chunk.js","sourcesContent":["// Core;\nimport React, {Component} from \"react\";\nimport Select from \"react-select\";\nimport {Col, Row, Table, FormGroup} from \"reactstrap\";\n// Components\nimport TableRow from \"./TableRow\";\nimport {getUsers} from \"../../../utils/api/users\";\nimport {getCompanies} from \"../../../utils/api/company\";\nimport {getCandidatesAmountByVacancies} from \"../../../utils/api/candidates\";\n\nexport default class Dashboard extends Component {\n  state = {\n    recruiters: [],\n    companies: [],\n\n    selectedRecruiter: null,\n    selectedCompany: null,\n\n    recruitersIsClearable: true,\n\n    dashboardData: null,\n  };\n\n  componentDidMount() {\n    this.fetchCompanies();\n    this.fetchRecruiters();\n    this.fetchCandidatesData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.selectedRecruiter !== prevState.selectedRecruiter ||\n      this.state.selectedCompany !== prevState.selectedCompany\n    ) {\n      this.fetchCandidatesData();\n    }\n\n    if (this.state.selectedRecruiter !== prevState.selectedRecruiter) {\n      this.fetchCompanies();\n    }\n  }\n\n  fetchRecruiters = async () => {\n    const users = await getUsers();\n\n    if (users.staff !== undefined) {\n      const recruiters = users.staff.filter((user) => user.role_id === 2); // recruiter\n      this.setState({recruiters});\n    } else if (users.recruiters !== undefined) {\n      const recruiters = users.recruiters; // recruiter\n      this.setState({recruiters});\n      this.setState({selectedRecruiter: recruiters[0]});\n      this.setState({recruitersIsClearable: false});\n    }\n  };\n\n  fetchCompanies = async () => {\n    let companies_result = await getCompanies(0, 1, 1);\n    const {selectedRecruiter} = this.state;\n    if (companies_result !== undefined) {\n      const companies = companies_result.companies.filter((company) => company.vacancies > 0 &&\n        (selectedRecruiter !== null && company.recruiters.indexOf(selectedRecruiter.id) + 1 > 0 || selectedRecruiter === null));\n      this.setState({companies});\n    }\n  };\n\n  fetchCandidatesData = async () => {\n    const {selectedCompany, selectedRecruiter} = this.state;\n\n    const dashboardData = await getCandidatesAmountByVacancies(\n      selectedRecruiter ? selectedRecruiter.id : null,\n      selectedCompany ? selectedCompany.id : null\n    );\n    if (dashboardData !== undefined) {\n      dashboardData.data.sort((a, b) =>\n        a.company_name > b.company_name ? 1 : -1\n      );\n\n      this.setState({dashboardData});\n    }\n  };\n\n  loading = () => (\n    <div className='animated fadeIn pt-1 text-center'>Loading...</div>\n  );\n\n  handleRecruiterSelect = (selectedRecruiter) => {\n    this.setState({selectedRecruiter});\n  };\n\n  handleCompanySelect = (selectedCompany) => {\n    this.setState({selectedCompany});\n  };\n\n  render() {\n    const {\n      dashboardData,\n      recruiters,\n      companies,\n      selectedRecruiter,\n      recruitersIsClearable,\n      selectedCompany,\n    } = this.state;\n\n    const vacansiesAndCompaniesJSX =\n      dashboardData &&\n      dashboardData.data.map((data) => {\n        return (\n          <TableRow\n            vacancyId={data.vacancy_id}\n            key={data.vacancy_id}\n            vacancy={data.platform_name}\n            conpanyName={data.company_name}\n            recruiterName={data.user_name}\n            quantity={data.quantity}\n            recruiters={recruiters}\n            companies={companies}\n          />\n        );\n      });\n\n    return (\n      <div className='animated fadeIn'>\n        <Row>\n          <Col\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              maxWidth: 180,\n              marginBottom: \"0.5rem\",\n            }}\n          >\n            <h1 style={{marginBottom: 0, marginTop: 20, fontSize: 24}}>\n              Dashboard\n            </h1>\n            <span\n              style={{\n                alignSelf: \"flex-end\",\n                color: \"var(--gray)\",\n              }}\n            ></span>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs='12' sm='12' md='12' lg='3' xl='3'>\n            <FormGroup className='filter-select'>\n              <Select\n                style={{marginBottom: 15}}\n                value={selectedRecruiter}\n                options={recruiters}\n                isClearable={recruitersIsClearable}\n                getOptionValue={(user) => user.id}\n                getOptionLabel={(user) => user.name}\n                placeholder='Recruiters'\n                onChange={this.handleRecruiterSelect}\n              />\n            </FormGroup>\n          </Col>\n          <Col xs='12' sm='12' md='12' lg='3' xl='3'>\n            <FormGroup className='filter-select'>\n              <Select\n                style={{marginBottom: \"1rem\"}}\n                value={selectedCompany}\n                options={companies}\n                isClearable\n                getOptionValue={(company) => company.id}\n                getOptionLabel={(company) => company.name}\n                placeholder='Companies'\n                onChange={this.handleCompanySelect}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs='12' md='12' xl='12'>\n            <Table style={{background: \"var(--white)\"}} responsive hover>\n              <thead>\n              <tr>\n                <th className='text-center'>Vacancies</th>\n                <th className='text-center'>Company</th>\n                <th className='text-center'>Recruiter</th>\n                <th className='text-center'>Quantity</th>\n              </tr>\n              </thead>\n              <tbody>{vacansiesAndCompaniesJSX}</tbody>\n            </Table>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","const URL = \"http://f2.uppeople.space/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches all users from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getUsers = () => {\n  const token = getToken();\n\n  return fetch(`${URL}/admin/all-staff`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const users = {\n        staff: data.users,\n        partners: data.partners,\n        freelancers: data.freeLancers,\n        recruiters:data.recruiters\n      };\n\n      return users;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TableRow = ({\r\n  vacancyId,\r\n  vacancy,\r\n  quantity,\r\n  recruiterName,\r\n  conpanyName,\r\n  recruiters,\r\n  companies,\r\n}) => {\r\n  let companyId;\r\n  companies.find((company) => {\r\n    if (company.name === conpanyName) companyId = company.id;\r\n  });\r\n\r\n  let recruiterId;\r\n  recruiters.find((recruiter) => {\r\n    if (recruiter.name === recruiterName) recruiterId = recruiter.id;\r\n  });\r\n\r\n  return (\r\n    <tr>\r\n      <td className='text-center'>\r\n        <Link to={`/vacancies/${vacancyId}`} target='_blank'>\r\n          {\" \"}\r\n          {vacancy}\r\n        </Link>\r\n      </td>\r\n      <td className='text-center'>\r\n        <Link to={`/companies/${companyId}`} target='_blank'>\r\n          {\" \"}\r\n          {conpanyName}\r\n        </Link>\r\n      </td>\r\n      <td className='text-center'>\r\n        <Link to={`/users/${recruiterId}`} target='_blank'>\r\n          {recruiterName}\r\n        </Link>\r\n      </td>\r\n      <td className='text-center'>\r\n        <div>{quantity}</div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nexport default TableRow;\r\n"],"sourceRoot":""}