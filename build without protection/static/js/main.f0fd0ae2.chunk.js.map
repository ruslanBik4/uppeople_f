{"version":3,"sources":["utils/auth.js","providers/AccountProvider.js","App.js","polyfill.js","serviceWorker.js","index.js","providers/ModalProvider.js"],"names":["URL","userSignIn","user","fetch","method","headers","body","JSON","stringify","then","response","console","log","ok","json","statusText","data","catch","error","userSignOut","token","Authorization","AccountContext","createContext","id","role","companyId","name","email","avatar","phone","authorized","authError","signIn","signOut","INITIAL_STATE","AccountProvider","state","undefined","access_token","localStorage","setItem","image","tel","role_id","company_id","setState","getItem","removeItem","resetState","accountApi","this","Provider","value","props","children","Component","Consumer","loading","className","color","style","position","top","left","transform","DefaultLayout","Loadable","loader","Login","Register","Page404","Page500","App","exact","path","render","component","hot","module","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","prototype","Event","Boolean","location","hostname","match","ReactDOM","template","AlertTemplate","timeout","offset","transition","getElementById","navigator","serviceWorker","ready","registration","unregister","ModalContext","showModal","hideModal","ModalConsumer","ModalRoot","onRequestClose","ModalProvider"],"mappings":"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","file":"static/js/main.f0fd0ae2.chunk.js","sourcesContent":["const URL = \"http://f2.uppeople.space/api\";\r\n\r\nexport const userSignIn = user => {\r\n  return fetch(`${URL}/auth/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      console.log(response)\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return `${response.statusText}`;\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch(error => console.log(\"[userSignIn error]: \", error));\r\n};\r\n\r\nexport const userSignOut = token => {\r\n  console.log(token);\r\n  return fetch(`${URL}/signup/logout`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token\r\n    }\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return `${response.statusText}`;\r\n    })\r\n    .then(data => {\r\n      return data;\r\n    })\r\n    .catch(error => console.log(error));\r\n};\r\n","// Core\r\nimport React, { Component, createContext } from \"react\";\r\n// Instruments\r\nimport { userSignIn, userSignOut } from \"../utils/auth\";\r\n\r\nexport const AccountContext = createContext({\r\n  user: {\r\n    id: null,\r\n    role: null,\r\n    companyId: null,\r\n    name: \"\",\r\n    email: \"\",\r\n    avatar: \"\",\r\n    phone: \"\"\r\n  },\r\n  authorized: false,\r\n  authError: null,\r\n  token: null,\r\n  signIn: () => null,\r\n  signOut: () => null\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  user: {\r\n    id: null,\r\n    role: null,\r\n    companyId: null,\r\n    name: \"\",\r\n    email: \"\",\r\n    avatar: \"\",\r\n    phone: \"\"\r\n  },\r\n  authorized: false,\r\n  authError: null,\r\n  token: null\r\n};\r\n\r\nexport default class AccountProvider extends Component {\r\n  static Consumer = AccountContext.Consumer;\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  signIn = user => {\r\n    userSignIn(user).then(response => {\r\n      if (response === \"Unauthorized\" || response.access_token === undefined) {\r\n        this.setState(\r\n          {\r\n            authError: response\r\n          },\r\n          () => console.log(this.state.authError)\r\n        );\r\n\r\n        return;\r\n      }\r\n\r\n      localStorage.setItem(\"token\", response.access_token);\r\n\r\n      const user = {\r\n        id: response.user.id,\r\n        name: response.user.name,\r\n        email: response.user.email,\r\n        avatar: response.user.image,\r\n        phone: response.user.tel,\r\n        role: response.user.role_id,\r\n        companyId: response.user.company_id\r\n      };\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      this.setState({\r\n        user,\r\n        authorized: true,\r\n        authError: null,\r\n        token: response.access_token\r\n      });\r\n    });\r\n  };\r\n\r\n  signOut = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    userSignOut(token);\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"token\");\r\n    this.resetState();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      ...INITIAL_STATE\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const accountApi = {\r\n      ...this.state,\r\n      signIn: this.signIn,\r\n      signOut: this.signOut\r\n    };\r\n    return (\r\n      // value prop is where we define what values\r\n      // that are accessible to consumer components\r\n      <AccountContext.Provider value={accountApi}>\r\n        {this.props.children}\r\n      </AccountContext.Provider>\r\n    );\r\n  }\r\n}\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { hot } from \"react-hot-loader\";\r\n// import { renderRoutes } from 'react-router-config';\r\nimport Loadable from \"react-loadable\";\r\nimport { Spinner } from \"reactstrap\";\r\n// Context\r\n// import AccountProvider from \"./providers/AccountProvider\";\r\nimport ModalProvider, { ModalRoot } from \"./providers/ModalProvider\";\r\n\r\n// Instruments\r\nimport \"./App.scss\";\r\n\r\nconst loading = () => (\r\n  <div className=\"animated fadeIn pt-3 text-center\">\r\n    <Spinner\r\n      color=\"info\"\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\n// Containers\r\nconst DefaultLayout = Loadable({\r\n  loader: () => import(\"./containers/DefaultLayout\"),\r\n  loading\r\n});\r\n\r\n// Pages\r\nconst Login = Loadable({\r\n  loader: () => import(\"./components/pages/Login\"),\r\n  loading\r\n});\r\n\r\nconst Register = Loadable({\r\n  loader: () => import(\"./components/pages/Register\"),\r\n  loading\r\n});\r\n\r\nconst Page404 = Loadable({\r\n  loader: () => import(\"./components/pages/Page404\"),\r\n  loading\r\n});\r\n\r\nconst Page500 = Loadable({\r\n  loader: () => import(\"./components/pages/Page500\"),\r\n  loading\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      // <AccountProvider>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            name=\"Login Page\"\r\n            render={props => <Login {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/register\"\r\n            name=\"Register Page\"\r\n            component={Register}\r\n          />\r\n          <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n          <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n          <ModalProvider>\r\n            <ModalRoot />\r\n            <Route\r\n              path=\"/\"\r\n              name=\"Home\"\r\n              render={props => <DefaultLayout {...props} />}\r\n            />\r\n          </ModalProvider>\r\n        </Switch>\r\n      </HashRouter>\r\n      //  </AccountProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hot(module)(App);\r\n","/*\r\n* required polyfills\r\n*/\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\nimport 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\nimport 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\nimport 'core-js/es6/set'\r\nimport 'core-js/es7/object'\r\nimport 'core-js/es6/promise'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname === 'uppeople.local' ||\r\n    window.location.hostname === 'api.uppeople.local' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie9\"; // For IE 9-11 support\r\nimport \"react-app-polyfill/ie11\"; // For IE 11 support\r\nimport \"./polyfill\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport AccountProvider from \"./providers/AccountProvider\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\n// optional cofiguration\r\nconst options = {\r\n  position: 'bottom center',\r\n  timeout: 5000,\r\n  offset: '30px',\r\n  transition: 'scale'\r\n}\r\n\r\nReactDOM.render(\r\n  <AccountProvider>\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n      <App />\r\n    </AlertProvider>\r\n  </AccountProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component, createContext } from \"react\";\r\n\r\nexport const ModalContext = createContext({\r\n  component: null,\r\n  props: {},\r\n  showModal: () => {},\r\n  hideModal: () => {}\r\n});\r\n\r\nexport const ModalConsumer = ModalContext.Consumer;\r\n\r\nexport const ModalRoot = () => (\r\n  <ModalConsumer>\r\n    {({ component: Component, props, hideModal }) =>\r\n      Component && <Component {...props} onRequestClose={hideModal} />\r\n    }\r\n  </ModalConsumer>\r\n);\r\n\r\nexport default class ModalProvider extends Component {\r\n  showModal = (component, props = {}) => {\r\n    this.setState({\r\n      component,\r\n      props\r\n    });\r\n  };\r\n\r\n  hideModal = () =>\r\n    this.setState({\r\n      component: null,\r\n      props: {}\r\n    });\r\n\r\n  state = {\r\n    component: null,\r\n    props: {},\r\n    showModal: this.showModal,\r\n    hideModal: this.hideModal\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ModalContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </ModalContext.Provider>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}