{"version":3,"sources":["components/Admin/Links/TableRow.js","components/Admin/Links/Table.js","components/Admin/Links/CreateForm.js","components/Admin/Links/Links.js","components/shared/ModalToDelete.js","components/hoc/withModal.js"],"names":["LinksTableRow","idx","id","title","link","onDelete","href","rel","target","style","paddingLeft","showModal","hideModal","Button","margin","padding","backgroundColor","borderColor","onClick","ModalToDelete","isOpenModal","name","className","defaultProps","LinksTable","links","linksJSX","length","map","key","color","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","initialState","LinksCreateForm","state","handleInputChange","value","setState","handleSubmit","event","preventDefault","props","onCreateLink","onRequestClose","this","Form","onSubmit","FormGroup","row","Col","Input","type","placeholder","onChange","position","top","right","Component","WithModalLinksCreateForm","withModal","Links","createLink","addLink","then","console","log","removeLink","deleteLink","data","message","filter","getDataForLinksPage","Row","marginBottom","fontSize","marginRight","modal","toggle","isOpen","WrappedComponent","toggleModal","nextProps"],"mappings":"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","file":"static/js/52.5648030b.chunk.js","sourcesContent":["// Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\n// Components\r\nimport ModalToDelete from \"../../shared/ModalToDelete\";\r\n// Context\r\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\r\n\r\nconst LinksTableRow = ({ idx, id, title, link, onDelete }) => (\r\n  <>\r\n    <td>{idx + 1}</td>\r\n    <td>{title}</td>\r\n    <td>\r\n      <a href={`${link}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n        {link}\r\n      </a>\r\n    </td>\r\n    <td style={{ paddingLeft: \"1.5rem\" }}>\r\n      <ModalConsumer>\r\n        {({ showModal, hideModal }) => (\r\n          <Button\r\n            title=\"delete\"\r\n            style={{\r\n              margin: 0,\r\n              padding: \"0.2rem\",\r\n              backgroundColor: \"transparent\",\r\n              borderColor: \"transparent\"\r\n            }}\r\n            onClick={() =>\r\n              showModal(ModalToDelete, {\r\n                isOpenModal: true,\r\n                title: \"Delete link\",\r\n                name: `${title}`,\r\n                onDelete: () => {\r\n                  onDelete(id);\r\n                  hideModal();\r\n                }\r\n              })\r\n            }\r\n          >\r\n            <i className=\"cui-trash icons font-lg\" />\r\n          </Button>\r\n        )}\r\n      </ModalConsumer>\r\n    </td>\r\n  </>\r\n);\r\n\r\nLinksTableRow.propTypes = {\r\n  idx: PropTypes.number.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string,\r\n  link: PropTypes.string,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nLinksTableRow.defaultProps = {\r\n  title: \"\",\r\n  link: \"\",\r\n  onDelete: () => null\r\n};\r\n\r\nexport default LinksTableRow;\r\n","// Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Table } from \"reactstrap\";\r\n// Components\r\nimport LinksTableRow from \"./TableRow\";\r\n\r\nconst LinksTable = ({ links, onDelete }) => {\r\n  const linksJSX =\r\n    links.length > 0 ? (\r\n      links.map((link, idx) => (\r\n        <tr key={link.id}>\r\n          <LinksTableRow idx={idx} {...link} onDelete={onDelete} />\r\n        </tr>\r\n      ))\r\n    ) : (\r\n      <tr style={{ color: \"var(--secondary)\" }}>\r\n        <td colSpan={9} align=\"center\">\r\n          Nothing found{\" \"}\r\n          <span role=\"img\" aria-label=\"confused face\">\r\n            ðŸ˜•\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    );\r\n\r\n  return (\r\n    <Table style={{ background: \"var(--white)\" }} responsive hover>\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Link</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{linksJSX}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nLinksTable.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequered,\r\n      title: PropTypes.string,\r\n      link: PropTypes.string\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nLinksTable.defaultProps = {\r\n  links: [],\r\n  onDelete: () => null\r\n};\r\n\r\nexport default LinksTable;\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, FormGroup, Input, Form } from \"reactstrap\";\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  link: \"\"\r\n};\r\n\r\nexport default class LinksCreateForm extends Component {\r\n  static propTypes = {\r\n    onCreateLink: PropTypes.func.isRequired,\r\n    onRequestClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    ...initialState\r\n  };\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { onCreateLink, onRequestClose } = this.props;\r\n    const link = this.state;\r\n\r\n    onCreateLink(link);\r\n\r\n    this.setState({ ...initialState });\r\n    onRequestClose();\r\n  };\r\n\r\n  render() {\r\n    const { title, link } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              placeholder=\"Title\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Col>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              value={link}\r\n              placeholder=\"Link\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <i\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"0.6rem\",\r\n                right: \"1.75rem\"\r\n              }}\r\n              className=\"icon-link icons font-lg\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={this.handleSubmit}>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\n// Components\r\nimport LinksTable from \"./Table\";\r\nimport LinksCreateForm from \"./CreateForm\";\r\n// HOC\r\nimport withModal from \"../../hoc/withModal\";\r\n// Context\r\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\r\n// Instruments\r\nimport { getDataForLinksPage, addLink, deleteLink } from \"../../../utils/api\";\r\n\r\nconst WithModalLinksCreateForm = withModal(LinksCreateForm);\r\n\r\nexport default class Links extends Component {\r\n  state = {\r\n    links: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    getDataForLinksPage().then(links => {\r\n      this.setState({\r\n        links\r\n      });\r\n    });\r\n  }\r\n\r\n  createLink = link => {\r\n    addLink(link).then(link => {\r\n      link\r\n        ? this.setState({\r\n            links: [link, ...this.state.links]\r\n          })\r\n        : console.log(\"Error while adding link\");\r\n    });\r\n  };\r\n\r\n  removeLink = id => {\r\n    deleteLink(id).then(data => {\r\n      data.message === \"Delete Successfully\"\r\n        ? this.setState(state => ({\r\n            links: state.links.filter(link => link.id !== id)\r\n          }))\r\n        : console.log(\"Error while deleting link\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: \"1rem\" }}>\r\n          <Col>\r\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Links</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: \"1rem\" }}>\r\n          <Col>\r\n            <ModalConsumer>\r\n              {({ showModal }) => (\r\n                <Button\r\n                  color=\"success\"\r\n                  onClick={() =>\r\n                    showModal(WithModalLinksCreateForm, {\r\n                      isOpenModal: true,\r\n                      title: \"Create new link\",\r\n                      onCreateLink: this.createLink\r\n                    })\r\n                  }\r\n                >\r\n                  <i\r\n                    style={{ marginRight: \"0.2rem\" }}\r\n                    className=\"fa fa-plus-circle\"\r\n                  />\r\n                  Create\r\n                </Button>\r\n              )}\r\n            </ModalConsumer>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <LinksTable links={links} onDelete={this.removeLink} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\nexport default class ModalToDelete extends Component {\r\n  state = {\r\n    modal: this.props.isOpenModal\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(state => ({\r\n      modal: !state.modal\r\n    }));\r\n\r\n    const { onRequestClose } = this.props;\r\n    onRequestClose();\r\n  };\r\n\r\n  render() {\r\n    const { modal } = this.state;\r\n    const { title, name, className, onDelete } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={this.toggle}\r\n        className={`modal-danger \" + ${className ? className : \"\"}`}\r\n      >\r\n        <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\r\n        <ModalBody>{`Are you sure to delete ${name}?`}</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={onDelete}>\r\n            Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\n\r\nconst withModal = WrappedComponent =>\r\n  class withModal extends Component {\r\n    state = {\r\n      modal: false\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n      console.log(\"ÐŸÐ ÐžÐŸÐ¡Ð«\", nextProps);\r\n      if (nextProps) {\r\n        return {\r\n          modal: nextProps.isOpenModal\r\n        };\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    toggleModal = () => {\r\n      this.setState(state => ({\r\n        modal: !state.modal\r\n      }));\r\n\r\n      const { onRequestClose } = this.props;\r\n      onRequestClose();\r\n    };\r\n\r\n    render() {\r\n      const { modal } = this.state;\r\n      const { title, className } = this.props;\r\n\r\n      // const renderModalTitle = () => {\r\n      //   switch (title) {\r\n      //     case \"new contact\":\r\n      //       return \"New Contact\";\r\n      //     case \"edit contact\":\r\n      //       return \"Edit Contact\";\r\n      //     case \"appoint interview\":\r\n      //       return \"Appoint Interview\";\r\n      //     case \"add vacancy\":\r\n      //       return \"Add vacancy\";\r\n      //     case \"new user\":\r\n      //       return \"New user\";\r\n      //     case \"create new link\":\r\n      //       return \"Create new link\";\r\n      //     default:\r\n      //       return \"Modal\";\r\n      //   }\r\n      // };\r\n\r\n      return (\r\n        <Modal\r\n          isOpen={modal}\r\n          toggle={this.toggleModal}\r\n          className={`modal-primary \" + ${className ? className : \"\"}`}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>{title}</ModalHeader>\r\n          <ModalBody>{modal && <WrappedComponent {...this.props} />}</ModalBody>\r\n        </Modal>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default withModal;\r\n"],"sourceRoot":""}