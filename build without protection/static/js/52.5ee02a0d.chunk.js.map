{"version":3,"sources":["components/Admin/Analytics/Analytics.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["Analytics","props","fetchRecruiters","a","getUsers","users","recruiters","staff","filter","user","role_id","setState","fetchCompanies","getCompanies","companies_result","companies","fetchVacancies","selectedCompany","state","getVacancies","id","vacancies_result","vacancies","fetchTags","getTags","tags","fetchCandidatesData","selectedRecruiter","selectedVacancy","selectedTag","selectedStartDate","selectedEndDate","getCandidatesAmountByStatuses","undefined","funnelData","data","fetchStatuses","getStatuses","statuses","selectedStatuses","handleRecruiterSelect","handleCompanySelect","handleVacancySelect","handleTagsSelect","handleStatusChange","handleDate","target","name","value","renderChart","result","Object","entries","reduceRight","acc","index","array","currentKey","currentValue","prev","prevKey","count","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","length","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","reverse","status","selectedStatus","label","push","stat","color","percentage","reduce","acc_","parseFloat","toFixed","final_data","dynamicSlope","dynamicHeight","style","margin","width","height","text","type","categoryField","field","colorField","background","format","render","point","category","visible","date","Date","end_date","toJSON","slice","setMonth","getMonth","start_date","this","prevProps","prevState","Row","marginBottom","Col","fontSize","xs","sm","md","lg","xl","FormGroup","className","options","getOptionValue","getOptionLabel","placeholder","onChange","company","vacancy","tag","isMulti","Input","Component"],"mappings":"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","file":"static/js/52.5ee02a0d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Col, FormGroup, Input, Row} from \"reactstrap\";\nimport Select from \"react-select\";\nimport {getUsers} from \"../../../utils/api/users\"; // вакансии\nimport {getCompanies} from \"../../../utils/api/company\"; // компании\nimport {getVacancies, getTags} from \"../../../utils/api/vacancy\"; // вакансии и теги\nimport {getStatuses, getCandidatesAmountByStatuses} from \"../../../utils/api/candidates\"; // вакансии и теги\nimport {\n  Chart,\n  ChartTitle,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartTooltip,\n  ChartSeriesLabels,\n} from \"@progress/kendo-react-charts\";\n// Import the styles\nimport {styles} from \"../../../assets/css/analitycs.css\";\n\nexport default class Analytics extends Component {\n  constructor(props) {\n    super(props);\n\n    let date = new Date();\n    let end_date = date.toJSON().slice(0, 10);\n    date.setMonth(date.getMonth() - 1);\n    let start_date = date.toJSON().slice(0, 10);\n\n    this.state = {\n      recruiters: [],\n      companies: [],\n      vacancies: [],\n      tags: [],\n      statuses: [],\n\n      selectedRecruiter: null,\n      selectedCompany: null,\n      selectedVacancy: null,\n      selectedTag: null,\n      selectedStatuses: null,\n      selectedStartDate: start_date,\n      selectedEndDate: end_date,\n\n      funnelData: null,\n      dynamicSlope: true,\n      dynamicHeight: false\n    };\n  }\n\n  componentDidMount() { // тут пишеться те, що потрібно підгрузити з АПІ\n    this.fetchRecruiters();\n    this.fetchCompanies();\n    this.fetchVacancies();\n    this.fetchTags();\n    // this.fetchCandidatesData();\n    this.fetchStatuses();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedRecruiter !== prevState.selectedRecruiter ||\n      this.state.selectedCompany !== prevState.selectedCompany ||\n      this.state.selectedVacancy !== prevState.selectedVacancy ||\n      this.state.selectedTag !== prevState.selectedTag ||\n      this.state.selectedStatuses !== prevState.selectedStatuses ||\n      this.state.selectedStartDate !== prevState.selectedStartDate ||\n      this.state.selectedEndDate !== prevState.selectedEndDate) {\n      this.fetchCandidatesData();\n    }\n    if (this.state.selectedCompany !== prevState.selectedCompany) {\n      this.fetchVacancies();\n    }\n  }\n\n  fetchRecruiters = async () => {\n    const users = await getUsers();\n    const recruiters = users.staff.filter((user) => user.role_id === 2); // recruiter\n\n    this.setState({recruiters});\n  };\n\n  fetchCompanies = async () => {\n    let companies_result = await getCompanies(0, 1);\n    const companies = companies_result.companies;\n    this.setState({companies});\n  };\n\n  fetchVacancies = async () => {\n    const {selectedCompany} = this.state;\n    const vacancies_result = await getVacancies(selectedCompany !== null ? selectedCompany.id : null);\n    const vacancies = vacancies_result.vacancies;\n    this.setState({vacancies});\n  };\n\n  fetchTags = async () => {\n    const tags = await getTags();\n    this.setState({tags});\n  };\n\n  fetchCandidatesData = async () => {\n    const {selectedRecruiter, selectedCompany, selectedVacancy, selectedTag, selectedStartDate, selectedEndDate} = this.state;\n    let funnelData = await getCandidatesAmountByStatuses(\n      selectedRecruiter ? selectedRecruiter.id : 0,\n      selectedCompany ? selectedCompany.id : 0,\n      selectedVacancy ? selectedVacancy.id : 0,\n      selectedTag ? selectedTag.id : 0,\n      selectedStartDate, selectedEndDate);\n    if (funnelData !== undefined) {\n      funnelData = funnelData.data;\n      this.setState({funnelData});\n    } else {\n      this.setState({funnelData: null});\n    }\n  };\n\n  fetchStatuses = async () => {\n    const statuses = await getStatuses();\n    this.setState({statuses});\n    this.setState({selectedStatuses: statuses});\n  };\n\n\n  handleRecruiterSelect = (selectedRecruiter) => {\n    this.setState({selectedRecruiter});\n  };\n\n  handleCompanySelect = (selectedCompany) => {\n    this.setState({selectedCompany});\n  };\n\n  handleVacancySelect = (selectedVacancy) => {\n    this.setState({selectedVacancy});\n  };\n\n  handleTagsSelect = (selectedTag) => {\n    this.setState({selectedTag});\n  };\n\n  handleStatusChange = (selectedStatuses) => {\n    this.setState({selectedStatuses});\n  };\n\n  handleDate = ({target: {name, value}}) => {\n    this.setState({[name]: value});\n  };\n\n  renderChart = () => {\n    const {funnelData, selectedStatuses} = this.state;\n\n    if (funnelData !== null && funnelData !== undefined) {\n      const result = Object.entries(funnelData).reduceRight(\n        (acc, [currentKey, currentValue], index, array) => {\n          const prev = array[index + 1];\n          if (prev) {\n            const [prevKey] = prev;\n            acc[currentKey] = {\n              ...currentValue,\n              count: acc[prevKey].count + currentValue.count,\n            };\n          } else {\n            acc[currentKey] = currentValue;\n          }\n          return acc;\n        },\n        {}\n      );\n\n      let data = [];\n      for (const [status, value] of Object.entries(result).reverse()) {\n        let in_statuses = selectedStatuses.filter((selectedStatus) => selectedStatus.label === status);\n        if (in_statuses.length > 0) {\n          data.push({\n            stat: status,\n            count: value.count,\n            color: value.color,\n            percentage: 100\n          });\n        }\n      }\n\n      data = data.reduce(\n        (acc_, currentValue, index, array) => {\n          const prev = array[index - 1];\n\n          if (prev) {\n            currentValue.percentage = (parseFloat(currentValue.count) * 100 / parseFloat(prev.count)).toFixed(0)\n          }\n\n          acc_[index] = currentValue;\n\n          return acc_;\n        },\n        {}\n      );\n\n      let final_data = [];\n      for (const [index, value] of Object.entries(data)) {\n        final_data.push({\n          stat: value.stat + ' ' + value.percentage + '%',\n          count: value.count,\n          color: value.color,\n        });\n      }\n\n      const tooltipRender = (({point = {}}) => (point.category));\n\n      const {dynamicSlope, dynamicHeight} = this.state;\n      return (\n\n        <Chart style={{margin: \"0 auto\", width: 300, height: 350}}>\n          <ChartTitle text=\"Recruitment funnel\"/>\n          <ChartSeries style={{height: 350}}>\n            <ChartSeriesItem\n              type=\"funnel\"\n              data={final_data}\n              categoryField=\"stat\"\n              field=\"count\"\n              colorField=\"color\"\n              dynamicHeight={dynamicHeight}\n              dynamicSlope={dynamicSlope}\n            >\n              <ChartSeriesLabels color=\"black\" background=\"none\" format=\"N0\"/>\n            </ChartSeriesItem>\n          </ChartSeries>\n          <ChartTooltip render={tooltipRender}/>\n          <ChartLegend visible={false}/>\n        </Chart>\n      );\n      // }\n      // else {\n      //   return (<p>No data found</p>);\n      // }\n    }\n\n  };\n\n\n  render() {\n    const {recruiters, selectedRecruiter} = this.state;\n    const {companies, selectedCompany} = this.state;\n    const {vacancies, selectedVacancy} = this.state;\n    const {tags, selectedTag} = this.state;\n    const {statuses, selectedStatuses} = this.state;\n    const {selectedStartDate, selectedEndDate} = this.state;\n\n    return (\n      <>\n        <Row style={{marginBottom: \"1rem\"}}>\n          <Col>\n            <h1 style={{marginBottom: 0, fontSize: 24}}>Recruitment funnel</h1>\n          </Col>\n        </Row>\n        <Row style={{marginBottom: \"1rem\"}}>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\">\n            <FormGroup className=\"filter-select\">\n              <label className=\"date-filter-label\">Filters</label>\n              <Select\n                style={{marginBottom: 15}}\n                value={selectedRecruiter}\n                options={recruiters}\n                getOptionValue={(user) => user.id}\n                getOptionLabel={(user) => user.name}\n                placeholder=\"Recruiters\"\n                onChange={this.handleRecruiterSelect}\n              />\n            </FormGroup>\n            <FormGroup className=\"filter-select\">\n              <Select\n                style={{marginBottom: \"1rem\"}}\n                value={selectedCompany}\n                options={companies}\n                getOptionValue={(company) => company.id}\n                getOptionLabel={(company) => company.name}\n                placeholder=\"Companies\"\n                onChange={this.handleCompanySelect}\n              />\n            </FormGroup>\n            <FormGroup className=\"filter-select\">\n              <Select\n                style={{marginBottom: \"1rem\"}}\n                value={selectedVacancy}\n                options={vacancies}\n                getOptionValue={(vacancy) => vacancy.id}\n                getOptionLabel={(vacancy) => vacancy.label}\n                placeholder=\"Vacancies\"\n                onChange={this.handleVacancySelect}\n              />\n            </FormGroup>\n            <FormGroup className=\"filter-select\">\n              <Select\n                style={{marginBottom: \"1rem\"}}\n                value={selectedTag}\n                options={tags}\n                getOptionValue={(tag) => tag.id}\n                getOptionLabel={(tag) => tag.name}\n                placeholder=\"Tags\"\n                onChange={this.handleTagsSelect}\n              />\n            </FormGroup>\n            <FormGroup className=\"filter-select\">\n              <Select\n                isMulti\n                value={selectedStatuses}\n                options={statuses}\n                placeholder=\"Statuses\"\n                onChange={this.handleStatusChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\">\n            <Row style={{marginBottom: \"1rem\"}}>\n              {this.renderChart()}\n            </Row>\n          </Col>\n          <Col lg={2} md={2}>\n            <FormGroup>\n              <label className=\"date-filter-label\">Date From</label>\n              <Input\n                id=\"date-from\"\n                type=\"date\"\n                name=\"selectedStartDate\"\n                value={selectedStartDate}\n                onChange={this.handleDate}\n              />\n            </FormGroup>\n          </Col>\n          <Col lg={2} md={2}>\n            <FormGroup>\n              <label className=\"date-filter-label\">Date To</label>\n              <Input\n                id=\"date-to\"\n                type=\"date\"\n                name=\"selectedEndDate\"\n                value={selectedEndDate}\n                onChange={this.handleDate}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n      </>\n\n    );\n  }\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}