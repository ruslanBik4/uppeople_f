{"version":3,"sources":["components/Admin/Platforms/TableRow.js","components/Admin/Platforms/Table.js","components/Admin/Platforms/CreateForm.js","components/Admin/Platforms/Platforms.js","components/shared/PaginationBackend.js","components/shared/ModalToDelete.js","components/hoc/withModal.js"],"names":["PlatformsTableRow","idx","id","name","onDelete","style","paddingLeft","showModal","hideModal","Button","title","margin","padding","backgroundColor","borderColor","onClick","ModalToDelete","isOpenModal","className","defaultProps","PlatformsTable","platforms","totalItems","pageSize","totalPages","currentPage","onChangePage","platformsJSX","length","map","platform","key","color","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","Row","Col","PaginationBackend","items","initialPage","initialState","PlatformsCreateForm","state","handleInputChange","target","value","setState","handleSubmit","event","preventDefault","props","onCreatePlatform","onRequestClose","this","Form","onSubmit","FormGroup","row","Input","type","placeholder","onChange","Component","WithModalPlatformsCreateForm","withModal","Links","totalPlatforms","perPage","createPlatform","addPlatform","then","console","log","removePlatform","deletePlatform","data","message","filter","getData","getDataForPlatformPage","platformsData","Count","Page","marginBottom","fontSize","marginRight","setPage","page","allDisabled","pager","getPager","setInitialPage","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","Array","keys","i","prevProps","loading","pointerEvents","disabled","index","active","modal","toggle","isOpen","WrappedComponent","toggleModal","nextProps"],"mappings":"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","file":"static/js/51.30d4eca2.chunk.js","sourcesContent":["// Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\n// Components\r\nimport ModalToDelete from \"../../shared/ModalToDelete\";\r\n// Context\r\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\r\n\r\nconst PlatformsTableRow = ({ idx, id, name, onDelete }) => (\r\n  <>\r\n    <td>{idx + 1}</td>\r\n    <td>{name}</td>\r\n    <td style={{ paddingLeft: \"1.5rem\" }}>\r\n      <ModalConsumer>\r\n        {({ showModal, hideModal }) => (\r\n          <Button\r\n            title=\"delete\"\r\n            style={{\r\n              margin: 0,\r\n              padding: \"0.2rem\",\r\n              backgroundColor: \"transparent\",\r\n              borderColor: \"transparent\"\r\n            }}\r\n            onClick={() =>\r\n              showModal(ModalToDelete, {\r\n                isOpenModal: true,\r\n                title: \"Delete platform\",\r\n                name: `${name}`,\r\n                onDelete: () => {\r\n                  onDelete(id);\r\n                  hideModal();\r\n                }\r\n              })\r\n            }\r\n          >\r\n            <i className=\"cui-trash icons font-lg\" />\r\n          </Button>\r\n        )}\r\n      </ModalConsumer>\r\n    </td>\r\n  </>\r\n);\r\n\r\nPlatformsTableRow.propTypes = {\r\n  idx: PropTypes.number.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nPlatformsTableRow.defaultProps = {\r\n  name: \"\",\r\n  onDelete: () => null\r\n};\r\n\r\nexport default PlatformsTableRow;\r\n","// Core\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row, Table } from \"reactstrap\";\r\n// Components\r\nimport PlatformsTableRow from \"./TableRow\";\r\nimport PaginationBackend from \"../../shared/PaginationBackend\";\r\n\r\nconst PlatformsTable = ({\r\n  platforms,\r\n  totalItems,\r\n  pageSize,\r\n  totalPages,\r\n  currentPage,\r\n  onChangePage,\r\n  onDelete\r\n}) => {\r\n  const platformsJSX =\r\n    platforms.length > 0 ? (\r\n      platforms.map((platform, idx) => (\r\n        <tr key={platform.id}>\r\n          <PlatformsTableRow idx={idx} {...platform} onDelete={onDelete} />\r\n        </tr>\r\n      ))\r\n    ) : (\r\n      <tr style={{ color: \"var(--secondary)\" }}>\r\n        <td colSpan={9} align=\"center\">\r\n          Nothing found{\" \"}\r\n          <span role=\"img\" aria-label=\"confused face\">\r\n            😕\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Table style={{ background: \"var(--white)\" }} responsive hover>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Platform</th>\r\n            <th scope=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{platformsJSX}</tbody>\r\n      </Table>\r\n      {platforms.length > 0 ? (\r\n        <Row>\r\n          <Col>\r\n            <PaginationBackend\r\n              items={platforms}\r\n              totalItems={totalItems}\r\n              pageSize={pageSize}\r\n              totalPages={totalPages}\r\n              initialPage={currentPage}\r\n              onChangePage={onChangePage}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nPlatformsTable.propTypes = {\r\n  platforms: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequered,\r\n      name: PropTypes.string\r\n    })\r\n  ),\r\n  currentPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n  totalItems: PropTypes.number,\r\n  totalPages: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nPlatformsTable.defaultProps = {\r\n  platforms: [],\r\n  currentPage: null,\r\n  pageSize: null,\r\n  totalItems: null,\r\n  totalPages: null,\r\n  onChangePage: () => null,\r\n  onDelete: () => null\r\n};\r\n\r\nexport default PlatformsTable;\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, FormGroup, Input, Form } from \"reactstrap\";\r\n\r\nconst initialState = {\r\n  name: \"\"\r\n};\r\n\r\nexport default class PlatformsCreateForm extends Component {\r\n  static propTypes = {\r\n    onCreatePlatform: PropTypes.func.isRequired,\r\n    onRequestClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    ...initialState\r\n  };\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { onCreatePlatform, onRequestClose } = this.props;\r\n\r\n    onCreatePlatform(this.state);\r\n\r\n    this.setState({ ...initialState });\r\n    onRequestClose();\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Platform name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={this.handleSubmit}>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\n// Components\r\nimport PlatformsTable from \"./Table\";\r\nimport PlatformsCreateForm from \"./CreateForm\";\r\n// HOC\r\nimport withModal from \"../../hoc/withModal\";\r\n// Context\r\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\r\n// Instruments\r\nimport {\r\n  getDataForPlatformPage,\r\n  addPlatform,\r\n  deletePlatform\r\n} from \"../../../utils/api\";\r\n\r\nconst WithModalPlatformsCreateForm = withModal(PlatformsCreateForm);\r\n\r\nexport default class Links extends Component {\r\n  state = {\r\n    platforms: [],\r\n    totalPlatforms: null,\r\n    totalPages: null,\r\n    perPage: null,\r\n    currentPage: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { currentPage } = this.state;\r\n\r\n    this.getData(currentPage);\r\n  }\r\n\r\n  createPlatform = platform => {\r\n    addPlatform(platform).then(platform => {\r\n      platform\r\n        ? this.setState({\r\n            platforms: [platform, ...this.state.platforms]\r\n          })\r\n        : console.log(\"Error while adding platform\");\r\n    });\r\n  };\r\n\r\n  removePlatform = id => {\r\n    deletePlatform(id).then(data => {\r\n      data.message === \"Delete Successfully\"\r\n        ? this.setState(state => ({\r\n            platforms: state.platforms.filter(platform => platform.id !== id)\r\n          }))\r\n        : console.log(\"Error while deleting platform\");\r\n    });\r\n  };\r\n\r\n  onChangePage = currentPage => {\r\n    this.getData(currentPage);\r\n  };\r\n\r\n  getData = currentPage => {\r\n    getDataForPlatformPage(currentPage).then(data => {\r\n      const platformsData = {\r\n        platforms: data.platforms,\r\n        totalPlatforms: data.Count,\r\n        totalPages: data.Page,\r\n        perPage: data.perPage,\r\n        currentPage: data.currentPage\r\n      };\r\n      this.setState({\r\n        ...this.state,\r\n        ...platformsData\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      platforms,\r\n      totalPlatforms,\r\n      perPage,\r\n      totalPages,\r\n      currentPage\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Row style={{ marginBottom: \"1rem\" }}>\r\n          <Col>\r\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Platforms</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: \"1rem\" }}>\r\n          <Col>\r\n            <ModalConsumer>\r\n              {({ showModal }) => (\r\n                <Button\r\n                  color=\"success\"\r\n                  onClick={() =>\r\n                    showModal(WithModalPlatformsCreateForm, {\r\n                      isOpenModal: true,\r\n                      title: \"Create new platform\",\r\n                      onCreatePlatform: this.createPlatform\r\n                    })\r\n                  }\r\n                >\r\n                  <i\r\n                    style={{ marginRight: \"0.2rem\" }}\r\n                    className=\"fa fa-plus-circle\"\r\n                  />\r\n                  Create\r\n                </Button>\r\n              )}\r\n            </ModalConsumer>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PlatformsTable\r\n              platforms={platforms}\r\n              totalItems={totalPlatforms}\r\n              pageSize={perPage}\r\n              totalPages={totalPages}\r\n              currentPage={currentPage}\r\n              onChangePage={this.onChangePage}\r\n              onDelete={this.removePlatform}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// Core\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\r\n\r\nconst propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({})),\r\n  initialPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n  totalItems: PropTypes.number,\r\n  totalPages: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  loading: PropTypes.bool\r\n  // onPageChange: PropTypes.func\r\n};\r\n\r\nconst defaultProps = {\r\n  items: [],\r\n  initialPage: 1,\r\n  pageSize: 10,\r\n  totalItems: null,\r\n  totalPages: null,\r\n  onChangePage: () => null\r\n  // onPageChange: () => null\r\n};\r\n\r\nclass PaginationBackend extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { pager: {} };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // set page if items array isn't empty\r\n    // if (this.props.items && this.props.items.length) {\r\n    //   this.setPage(this.props.initialPage);\r\n    // }\r\n    this.setInitialPage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log('update from PaginationBackend');\r\n    // reset page if initialPage has changed\r\n    if (\r\n      this.props.initialPage !== prevProps.initialPage ||\r\n      this.props.totalItems !== prevProps.totalItems\r\n    ) {\r\n      console.log('condition update from PaginationBackend');\r\n      this.setPage(this.props.initialPage);\r\n    }\r\n  }\r\n\r\n  setPage = page => {\r\n    const { totalItems, totalPages, pageSize } = this.props;\r\n    this.allDisabled = false;\r\n    let pager = this.state.pager;\r\n\r\n    if (page < 1 || page > totalPages) {\r\n      return;\r\n    }\r\n\r\n    // get new pager object for specified page\r\n    pager = this.getPager(totalItems, page, pageSize);\r\n\r\n    // update state\r\n    this.setState({ pager });\r\n\r\n\r\n    // call change page function in parent component\r\n    this.props.onChangePage(page);\r\n    // this.props.onPageChange(page);\r\n\r\n  };\r\n\r\n  setInitialPage = () => {\r\n    let page = 1;\r\n    const { totalItems, totalPages, pageSize } = this.props;\r\n    this.allDisabled = false;\r\n    let pager = this.state.pager;\r\n\r\n    if (page < 1 || page > totalPages) {\r\n      return;\r\n    }\r\n\r\n    // get new pager object for specified page\r\n    pager = this.getPager(totalItems, page, pageSize);\r\n\r\n    // update state\r\n    this.setState({ pager });\r\n\r\n  }\r\n\r\n  getPager = (totalItems, currentPage, pageSize) => {\r\n    // default to first page\r\n    currentPage = currentPage || 1;\r\n\r\n    // default page size is 10\r\n    pageSize = pageSize || 10;\r\n\r\n    // calculate total pages\r\n    const totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    let startPage, endPage;\r\n    if (totalPages <= 10) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 6) {\r\n        startPage = 1;\r\n        endPage = 10;\r\n      } else if (currentPage + 4 >= totalPages) {\r\n        startPage = totalPages - 9;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 5;\r\n        endPage = currentPage + 4;\r\n      }\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\r\n      i => startPage + i\r\n    );\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages\r\n    };\r\n  };\r\n\r\n  render() {\r\n    let pager = this.state.pager;\r\n\r\n    const {loading} = this.props;\r\n\r\n    const loadingStyle = {\r\n      pointerEvents: \"none\",\r\n      // opacity: 0.4\r\n    }\r\n\r\n    const paginationStyle = {};\r\n\r\n    if (!pager.pages || pager.pages.length <= 1) {\r\n      // don't display pager if there is only 1 page\r\n      return null;\r\n    }\r\n    // console.log(this);\r\n    return (\r\n      <Pagination style={loading ? loadingStyle : paginationStyle}  className=\"pagination justify-content-end\">\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={pager.currentPage === 1 ? true : false}\r\n        >\r\n          <PaginationLink className=\"page-link\" onClick={() => this.setPage(1)}>\r\n            First\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={pager.currentPage === 1 ? true : false}\r\n        >\r\n          <PaginationLink\r\n            className=\"page-link\"\r\n            onClick={() => this.setPage(pager.currentPage - 1)}\r\n          >\r\n            Previous\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        {pager.pages.map((page, index) => (\r\n          <PaginationItem\r\n            key={index}\r\n            className=\"page-item\"\r\n            active={pager.currentPage === page ? true : false}\r\n            disabled={this.allDisabled}\r\n          >\r\n            <PaginationLink\r\n              className=\"page-link\"\r\n              onClick={() => this.setPage(page)}\r\n            >\r\n              {page}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        ))}\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={(pager.currentPage === pager.totalPages ? true : false) || this.allDisabled}\r\n        >\r\n          <PaginationLink\r\n            className=\"page-link\"\r\n            onClick={() => this.setPage(pager.currentPage + 1)}\r\n          >\r\n            Next\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem\r\n          className=\"page-item\"\r\n          disabled={(pager.currentPage === pager.totalPages ? true : false) || this.allDisabled}\r\n        >\r\n          <PaginationLink\r\n            className=\"page-link\"\r\n            onClick={() => this.setPage(pager.totalPages)}\r\n          >\r\n            Last\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n      </Pagination>\r\n    );\r\n  }\r\n}\r\n\r\nPaginationBackend.propTypes = propTypes;\r\nPaginationBackend.defaultProps = defaultProps;\r\n\r\nexport default PaginationBackend;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\nexport default class ModalToDelete extends Component {\r\n  state = {\r\n    modal: this.props.isOpenModal\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(state => ({\r\n      modal: !state.modal\r\n    }));\r\n\r\n    const { onRequestClose } = this.props;\r\n    onRequestClose();\r\n  };\r\n\r\n  render() {\r\n    const { modal } = this.state;\r\n    const { title, name, className, onDelete } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={this.toggle}\r\n        className={`modal-danger \" + ${className ? className : \"\"}`}\r\n      >\r\n        <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\r\n        <ModalBody>{`Are you sure to delete ${name}?`}</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={onDelete}>\r\n            Delete\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={this.toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\n\r\nconst withModal = WrappedComponent =>\r\n  class withModal extends Component {\r\n    state = {\r\n      modal: false\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n      console.log(\"ПРОПСЫ\", nextProps);\r\n      if (nextProps) {\r\n        return {\r\n          modal: nextProps.isOpenModal\r\n        };\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    toggleModal = () => {\r\n      this.setState(state => ({\r\n        modal: !state.modal\r\n      }));\r\n\r\n      const { onRequestClose } = this.props;\r\n      onRequestClose();\r\n    };\r\n\r\n    render() {\r\n      const { modal } = this.state;\r\n      const { title, className } = this.props;\r\n\r\n      // const renderModalTitle = () => {\r\n      //   switch (title) {\r\n      //     case \"new contact\":\r\n      //       return \"New Contact\";\r\n      //     case \"edit contact\":\r\n      //       return \"Edit Contact\";\r\n      //     case \"appoint interview\":\r\n      //       return \"Appoint Interview\";\r\n      //     case \"add vacancy\":\r\n      //       return \"Add vacancy\";\r\n      //     case \"new user\":\r\n      //       return \"New user\";\r\n      //     case \"create new link\":\r\n      //       return \"Create new link\";\r\n      //     default:\r\n      //       return \"Modal\";\r\n      //   }\r\n      // };\r\n\r\n      return (\r\n        <Modal\r\n          isOpen={modal}\r\n          toggle={this.toggleModal}\r\n          className={`modal-primary \" + ${className ? className : \"\"}`}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>{title}</ModalHeader>\r\n          <ModalBody>{modal && <WrappedComponent {...this.props} />}</ModalBody>\r\n        </Modal>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default withModal;\r\n"],"sourceRoot":""}